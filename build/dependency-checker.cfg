# List of folders to search for projects. 
# All subfolders are searched.
# All paths are relative to the config file.
input: ..


# Projects and libraries can be ignored
ignore: System

# Ignore all libraries or projects that are not inside the input folders.
ignore all references not in inputs


# An assembly can be in only one group.
# The first line that matches will be used.
group: Command line += regex: .*\.Cli
group: Tests += regex: .*\.Test


# These rules always run
rule: don't allow circular dependencies
rule: no two projects with same name
rule: no two projects with same GUID
rule: no two projects with same name and GUID
rule: avoid same dependency twice				[warning]

# Dependency rules are different. The first one that matches wins.
# They can allow or disallow a dependency.
# -> means that the dependency is allowed
# -X-> means that the dependency is NOT allowed
rule: regex: .* -X-> Command line
rule: DependencyChecker.Utils -X-> regex: .*
rule: DependencyChecker.Model -X-> DependencyChecker.Presenter
rule: Tests -X-> Tests
rule: regex: .* -X-> Tests


# This can be used to ignore some infos (but those help to debug this configuration file).
#in output: ignore loading infos
#in output: ignore config infos


# Different kinds of output.
# Please note that the file extension change the file format.
# All paths are relative to the config file.
output projects:		Results\Reports\DependenciesChecker\projects.txt
output groups:			Results\Reports\DependenciesChecker\groups.txt
output dependencies:	Results\Reports\DependenciesChecker\dependencies.txt 
output dependencies:	Results\Reports\DependenciesChecker\dependencies.xml
output dependencies:	Results\Reports\DependenciesChecker\dependencies.dot
output dependencies with errors: Results\Reports\DependenciesChecker\dependencies-with-errors.dot
output architecture:	Results\Reports\DependenciesChecker\architecture.txt 
output architecture:	Results\Reports\DependenciesChecker\architecture.xml
output architecture:	Results\Reports\DependenciesChecker\architecture.dot 
output results:			Results\Reports\DependenciesChecker\errors.txt
output results:			Results\Reports\DependenciesChecker\errors.xml
output results: console
